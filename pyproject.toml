[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "think-ar"
description = "AI-powered AR tattoo visualization system"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
dynamic = ["version"]
authors = [
    {name = "thInk Team", email = "contact@think-ar.dev"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.11",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    # Core dependencies
    "numpy>=1.24.0",
    "opencv-python>=4.8.0",
    "torch>=2.1.0",
    "pillow>=10.0.0",
    "mediapipe>=0.10.0",
    "diffusers>=0.24.0",
    "transformers>=4.36.0",
    
    # Server dependencies
    "fastapi>=0.109.0",
    "uvicorn>=0.25.0",
    "python-jose[cryptography]>=3.4.0",
    "bcrypt>=4.1.0",
    "SQLAlchemy>=2.0.0",
    "pydantic>=2.0.0",
    "python-dotenv>=1.0.0",
    "requests>=2.31.0",
    "stripe>=8.11.0",
    "psutil>=5.9.0",
    
    # Additional dependencies
    "jinja2>=3.1.0",
    "matplotlib>=3.8.0",
    "pandas>=2.1.0",
    "prometheus-client>=0.19.0",
    "alembic>=1.13.0",
    "redis>=5.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.23.0",
    "black>=23.12.0",
    "mypy>=1.8.0",
    "flake8>=7.0.0",
    "isort>=5.12.0",
    "pre-commit>=3.5.0",
    "docker>=7.0.0",
]
gpu = [
    "torch>=2.1.0+cu118"
]
monitoring = [
    "prometheus-client>=0.19.0",
    "grafana-api>=1.0.3"
]
docs = [
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.25.0"
]

[project.urls]
"Homepage" = "https://github.com/think-ar/think"
"Bug Tracker" = "https://github.com/think-ar/think/issues"
"Documentation" = "https://think-ar.readthedocs.io"

[project.scripts]
think = "src.main:main"
think-server = "server.app:main"
think-worker = "microservices.text_to_tattoo.main:main"

[tool.setuptools_scm]
write_to = "src/version.py"
version_scheme = "release-branch-semver"

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_gitignore = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "--cov=src --cov=server --cov-report=xml:coverage.xml --cov-report=term"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src", "server"]
omit = ["*/tests/*", "*/migrations/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.flake8]
max-line-length = 100
extend-ignore = "E203, W503"
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
    ".venv",
    "venv",
]